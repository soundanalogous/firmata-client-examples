var RGB = require("./rgb");
var Collection = require("../mixins/collection");

/**
 * RGBs()
 * new RGBs()
 *
 * Create an Array-like object instance of RGBs
 * @alias Led.Array
 * @constructor
 * @return {RGBs}
 */
function RGBs(numsOrObjects) {
  if (!(this instanceof RGBs)) {
    return new RGBs(numsOrObjects);
  }

  Object.defineProperty(this, "type", {
    value: RGB
  });

  Collection.call(this, numsOrObjects);
}

RGBs.prototype = Object.create(Collection.prototype, {
  constructor: {
    value: RGBs
  }
});

[

  "on", "off", "toggle", "intensity",
  "stop", "strobe", "blink",

].forEach(function(method) {
  // Create RGBs wrappers for each method listed.
  // This will allow us control over all Led instances
  // simultaneously.
  RGBs.prototype[method] = function() {
    var length = this.length;

    for (var i = 0; i < length; i++) {
      this[i][method].apply(this[i], arguments);
    }
    return this;
  };
});

RGBs.prototype.blink = RGBs.prototype.strobe;

module.exports = RGBs;
